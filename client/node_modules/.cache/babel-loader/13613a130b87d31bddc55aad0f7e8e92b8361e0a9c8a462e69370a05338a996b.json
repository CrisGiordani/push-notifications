{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/Dev/Claro/push-client/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nnavigator.serviceWorker.register('/sw.js').then(async serviceWorker => {\n  let subscription = await serviceWorker.pushManager.getSubscription();\n  if (!subscription) {\n    const publicKey = await fetch('http://localhost:3333/push/public_key', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(publicKey);\n    subscription = await serviceWorker.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: publicKey.publicKey\n    });\n  }\n  await fetch('http://localhost:3333/push/register', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(subscription)\n  });\n});\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"Aplicativo React com Notifica\\xE7\\xF5es Push!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["navigator","serviceWorker","register","then","subscription","pushManager","getSubscription","publicKey","fetch","method","headers","console","log","subscribe","userVisibleOnly","applicationServerKey","body","JSON","stringify","App","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cristian/Dev/Claro/push-client/src/App.js"],"sourcesContent":["navigator.serviceWorker.register('/sw.js')\n  .then(async serviceWorker => {\n    let subscription = await serviceWorker.pushManager.getSubscription();\n\n    if(!subscription) {\n\n      const publicKey = await fetch('http://localhost:3333/push/public_key', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      });\n\n      console.log(publicKey);\n\n      subscription = await serviceWorker.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: publicKey.publicKey\n      });\n    }\n\n    await fetch('http://localhost:3333/push/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(subscription)\n    });\n  });\n\nconst App = () => {\n  return <div className=\"App\">Aplicativo React com Notificações Push!</div>;\n};\n\nexport default App;\n"],"mappings":";;AAAAA,SAAS,CAACC,aAAa,CAACC,QAAQ,CAAC,QAAQ,CAAC,CACvCC,IAAI,CAAC,MAAMF,aAAa,IAAI;EAC3B,IAAIG,YAAY,GAAG,MAAMH,aAAa,CAACI,WAAW,CAACC,eAAe,CAAC,CAAC;EAEpE,IAAG,CAACF,YAAY,EAAE;IAEhB,MAAMG,SAAS,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACrEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;IAEtBH,YAAY,GAAG,MAAMH,aAAa,CAACI,WAAW,CAACQ,SAAS,CAAC;MACvDC,eAAe,EAAE,IAAI;MACrBC,oBAAoB,EAAER,SAAS,CAACA;IAClC,CAAC,CAAC;EACJ;EAEA,MAAMC,KAAK,CAAC,qCAAqC,EAAE;IACjDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,YAAY;EACnC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEJ,MAAMe,GAAG,GAAGA,CAAA,KAAM;EAChB,oBAAOC,OAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,QAAA,EAAC;EAAuC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC3E,CAAC;AAACC,EAAA,GAFIR,GAAG;AAIT,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}