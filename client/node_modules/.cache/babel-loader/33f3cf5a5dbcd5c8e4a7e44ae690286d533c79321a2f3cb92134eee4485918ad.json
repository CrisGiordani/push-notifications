{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/Dev/Claro/push-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n\n// Função para inscrever o cliente em notificações push\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst subscribeToPushNotifications = async registration => {\n  try {\n    const vapidPublicKey = 'BDAFRkRYA-h4r0SFyAFvufV2JCeLE-aDXk8mq9BFZ2yPJsXjqvK2MJu2ilPwo9FDdjd6hdAZfrSs2qO0bXJSe1w';\n\n    // Criar a inscrição\n    const subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: vapidPublicKey\n    });\n    console.log(subscription);\n    return subscription;\n  } catch (error) {\n    console.error('Erro ao se inscrever para notificações push:', error);\n    throw error;\n  }\n};\n\n// Função para enviar a inscrição ao servidor\nconst sendSubscriptionToServer = async subscription => {\n  try {\n    await fetch('http://localhost:3333/subscribe', {\n      method: 'POST',\n      body: JSON.stringify(subscription),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Inscrição enviada ao servidor com sucesso.');\n  } catch (error) {\n    console.error('Erro ao enviar a inscrição ao servidor:', error);\n    throw error;\n  }\n};\nconst App = () => {\n  _s();\n  useEffect(() => {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        if (!registration.active) {\n          return navigator.serviceWorker.register('/sw.js');\n        }\n        return registration;\n      }).then(async registration => {\n        console.log('Service Worker registrado ou já ativo:', registration);\n\n        // Após o registro do Service Worker, inscreva-se para notificações push\n        const subscription = await subscribeToPushNotifications(registration);\n        console.log('Inscrição concluída:', subscription);\n\n        // Envie a inscrição para o servidor\n        await sendSubscriptionToServer(subscription);\n      }).catch(error => {\n        console.error('Erro ao registrar o Service Worker:', error);\n      });\n    } else {\n      console.error('No serviceWorker in navigator');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"Aplicativo React com Notifica\\xE7\\xF5es Push!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","subscribeToPushNotifications","registration","vapidPublicKey","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","console","log","error","sendSubscriptionToServer","fetch","method","body","JSON","stringify","headers","App","_s","navigator","serviceWorker","ready","then","active","register","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cristian/Dev/Claro/push-client/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\n\n\n// Função para inscrever o cliente em notificações push\nconst subscribeToPushNotifications = async (registration) => {\n  try {\n    const vapidPublicKey = 'BDAFRkRYA-h4r0SFyAFvufV2JCeLE-aDXk8mq9BFZ2yPJsXjqvK2MJu2ilPwo9FDdjd6hdAZfrSs2qO0bXJSe1w';\n\n    // Criar a inscrição\n    const subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: vapidPublicKey,\n    });\n    console.log(subscription);\n    return subscription;\n    \n  } catch (error) {\n    console.error('Erro ao se inscrever para notificações push:', error);\n    throw error;\n  }\n};\n\n// Função para enviar a inscrição ao servidor\nconst sendSubscriptionToServer = async (subscription) => {\n  try {\n    await fetch('http://localhost:3333/subscribe', {\n      method: 'POST',\n      body: JSON.stringify(subscription),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    console.log('Inscrição enviada ao servidor com sucesso.');\n  } catch (error) {\n    console.error('Erro ao enviar a inscrição ao servidor:', error);\n    throw error;\n  }\n};\n\nconst App = () => {\n  useEffect(() => {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          if (!registration.active) {\n            return navigator.serviceWorker.register('/sw.js');\n          }\n          return registration;\n        })\n        .then(async (registration) => {\n          console.log('Service Worker registrado ou já ativo:', registration);\n\n          // Após o registro do Service Worker, inscreva-se para notificações push\n          const subscription = await subscribeToPushNotifications(registration);\n          console.log('Inscrição concluída:', subscription);\n\n          // Envie a inscrição para o servidor\n          await sendSubscriptionToServer(subscription);\n        })\n        .catch((error) => {\n          console.error('Erro ao registrar o Service Worker:', error);\n        });\n    } else {\n      console.error('No serviceWorker in navigator');\n    }\n  }, []);\n\n  return <div className=\"App\">Aplicativo React com Notificações Push!</div>;\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAIxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,4BAA4B,GAAG,MAAOC,YAAY,IAAK;EAC3D,IAAI;IACF,MAAMC,cAAc,GAAG,yFAAyF;;IAEhH;IACA,MAAMC,YAAY,GAAG,MAAMF,YAAY,CAACG,WAAW,CAACC,SAAS,CAAC;MAC5DC,eAAe,EAAE,IAAI;MACrBC,oBAAoB,EAAEL;IACxB,CAAC,CAAC;IACFM,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;IACzB,OAAOA,YAAY;EAErB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACpE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMC,wBAAwB,GAAG,MAAOR,YAAY,IAAK;EACvD,IAAI;IACF,MAAMS,KAAK,CAAC,iCAAiC,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,YAAY,CAAC;MAClCc,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFT,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;EAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMQ,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChBtB,SAAS,CAAC,MAAM;IACd,IAAI,eAAe,IAAIuB,SAAS,EAAE;MAChCA,SAAS,CAACC,aAAa,CAACC,KAAK,CAC1BC,IAAI,CAAEtB,YAAY,IAAK;QACtB,IAAI,CAACA,YAAY,CAACuB,MAAM,EAAE;UACxB,OAAOJ,SAAS,CAACC,aAAa,CAACI,QAAQ,CAAC,QAAQ,CAAC;QACnD;QACA,OAAOxB,YAAY;MACrB,CAAC,CAAC,CACDsB,IAAI,CAAC,MAAOtB,YAAY,IAAK;QAC5BO,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAER,YAAY,CAAC;;QAEnE;QACA,MAAME,YAAY,GAAG,MAAMH,4BAA4B,CAACC,YAAY,CAAC;QACrEO,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEN,YAAY,CAAC;;QAEjD;QACA,MAAMQ,wBAAwB,CAACR,YAAY,CAAC;MAC9C,CAAC,CAAC,CACDuB,KAAK,CAAEhB,KAAK,IAAK;QAChBF,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D,CAAC,CAAC;IACN,CAAC,MAAM;MACLF,OAAO,CAACE,KAAK,CAAC,+BAA+B,CAAC;IAChD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOX,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,EAAC;EAAuC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC3E,CAAC;AAACb,EAAA,CA7BID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}